package inventory.validate;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import inventory.model.Category;
import inventory.service.ProductService;
@Component
public class CategoryValidator implements Validator{

	@Autowired
	private ProductService productService;
	
	
	@Override
	public boolean supports(Class<?> clazz) {
		return clazz == Category.class ;
	}

	@Override
	public void validate(Object target, Errors errors) {
		Category category = (Category) target; 
		// Check not empty in input
		ValidationUtils.rejectIfEmpty(errors, "code", "msg.required");
		ValidationUtils.rejectIfEmpty(errors, "name", "msg.required");
		ValidationUtils.rejectIfEmpty(errors, "description", "msg.required");
		// Check not same code
		// if can get code
		if (category.getCode() != null) {
			// get list result that has code
			List<Category> results = productService.findCategory("code", category.getCode());
			// if code is valid in database => show message errors
			if (results != null && !results.isEmpty()) {
				errors.rejectValue("code", "msg.code.exist");
			}
		}
	}

}
